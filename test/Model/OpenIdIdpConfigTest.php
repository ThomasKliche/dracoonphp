<?php
/**
 * OpenIdIdpConfigTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * DRACOON
 *
 * REST Web Services for DRACOON<br>Version: 4.14.4  - built at: 2019-11-04 11:46:45<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a>
 *
 * OpenAPI spec version: 4.14.4
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.9
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Swagger\Client;

/**
 * OpenIdIdpConfigTest Class Doc Comment
 *
 * @category    Class
 * @description OpenID Connect IDP configuration
 * @package     Swagger\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class OpenIdIdpConfigTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "OpenIdIdpConfig"
     */
    public function testOpenIdIdpConfig()
    {
    }

    /**
     * Test attribute "id"
     */
    public function testPropertyId()
    {
    }

    /**
     * Test attribute "name"
     */
    public function testPropertyName()
    {
    }

    /**
     * Test attribute "issuer"
     */
    public function testPropertyIssuer()
    {
    }

    /**
     * Test attribute "authorization_end_point_url"
     */
    public function testPropertyAuthorizationEndPointUrl()
    {
    }

    /**
     * Test attribute "token_end_point_url"
     */
    public function testPropertyTokenEndPointUrl()
    {
    }

    /**
     * Test attribute "user_info_end_point_url"
     */
    public function testPropertyUserInfoEndPointUrl()
    {
    }

    /**
     * Test attribute "jwks_end_point_url"
     */
    public function testPropertyJwksEndPointUrl()
    {
    }

    /**
     * Test attribute "client_id"
     */
    public function testPropertyClientId()
    {
    }

    /**
     * Test attribute "client_secret"
     */
    public function testPropertyClientSecret()
    {
    }

    /**
     * Test attribute "flow"
     */
    public function testPropertyFlow()
    {
    }

    /**
     * Test attribute "scopes"
     */
    public function testPropertyScopes()
    {
    }

    /**
     * Test attribute "redirect_uris"
     */
    public function testPropertyRedirectUris()
    {
    }

    /**
     * Test attribute "pkce_enabled"
     */
    public function testPropertyPkceEnabled()
    {
    }

    /**
     * Test attribute "pkce_challenge_method"
     */
    public function testPropertyPkceChallengeMethod()
    {
    }

    /**
     * Test attribute "mapping_claim"
     */
    public function testPropertyMappingClaim()
    {
    }

    /**
     * Test attribute "fallback_mapping_claim"
     */
    public function testPropertyFallbackMappingClaim()
    {
    }

    /**
     * Test attribute "user_import_enabled"
     */
    public function testPropertyUserImportEnabled()
    {
    }

    /**
     * Test attribute "user_import_group"
     */
    public function testPropertyUserImportGroup()
    {
    }

    /**
     * Test attribute "user_update_enabled"
     */
    public function testPropertyUserUpdateEnabled()
    {
    }
}
